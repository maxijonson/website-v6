import { getCategories } from "../../../../../sanity/queries/categories/getCategories";
import { getTags } from "../../../../../sanity/queries/tags/getTags";
import BlogHomePage from "../components/blog-home-page/blog-home-page";
import type { BlogRouteHandler } from "../page";
import BlogHomeBanner from "$/image/blog/blog-home-banner.jpg";
import { getBaseURL } from "@/utils/getBaseURL";
import type { OpenGraph } from "next/dist/lib/metadata/types/opengraph-types";
import { getDefinedParentMetadata } from "@/utils/getDefinedParentMetadata";

export const blogHomeHandler: BlogRouteHandler = {
  canHandle: ({ params: { slug = [] } }) => slug.length === 0,
  render: BlogHomePage,
  generateStaticParams: () => [{ slug: [] }],
  generateMetadata: async (_, parent) => {
    const [categories, tags, definedParentMetadata] = await Promise.all([
      getCategories(),
      getTags(),
      getDefinedParentMetadata(parent),
    ]);

    const title = "Tristan Chin's Blog";
    const description =
      "Check out some of the blog posts I've written about tech and programming!";

    const ogImages: Required<OpenGraph["images"]> = [
      {
        url: new URL(BlogHomeBanner.src, getBaseURL()),
        alt: "Blog Home Banner (Generated by Gemini)",
        width: BlogHomeBanner.width,
        height: BlogHomeBanner.height,
      },
    ];

    return {
      ...definedParentMetadata,
      title,
      description,
      keywords: [
        "blog",
        ...categories.map((category) => category.name),
        ...tags.map((tag) => tag.name),
      ],
      openGraph: {
        ...definedParentMetadata.openGraph,
        title,
        description,
        images: ogImages,
      },
      twitter: {
        ...definedParentMetadata.twitter,
        title,
        description,
        images: ogImages,
      },
    };
  },
};
